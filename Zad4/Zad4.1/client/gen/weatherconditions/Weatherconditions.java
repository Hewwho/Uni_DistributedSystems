// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: weatherconditions.proto

package weatherconditions;

public final class Weatherconditions {
  private Weatherconditions() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code weatherconditions.WeatherType}
   */
  public enum WeatherType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUNNY = 0;</code>
     */
    SUNNY(0),
    /**
     * <code>CLOUDY = 1;</code>
     */
    CLOUDY(1),
    /**
     * <code>RAINY = 2;</code>
     */
    RAINY(2),
    /**
     * <code>STORMY = 3;</code>
     */
    STORMY(3),
    /**
     * <code>SNOWY = 4;</code>
     */
    SNOWY(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SUNNY = 0;</code>
     */
    public static final int SUNNY_VALUE = 0;
    /**
     * <code>CLOUDY = 1;</code>
     */
    public static final int CLOUDY_VALUE = 1;
    /**
     * <code>RAINY = 2;</code>
     */
    public static final int RAINY_VALUE = 2;
    /**
     * <code>STORMY = 3;</code>
     */
    public static final int STORMY_VALUE = 3;
    /**
     * <code>SNOWY = 4;</code>
     */
    public static final int SNOWY_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WeatherType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WeatherType forNumber(int value) {
      switch (value) {
        case 0: return SUNNY;
        case 1: return CLOUDY;
        case 2: return RAINY;
        case 3: return STORMY;
        case 4: return SNOWY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WeatherType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WeatherType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WeatherType>() {
            public WeatherType findValueByNumber(int number) {
              return WeatherType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return weatherconditions.Weatherconditions.getDescriptor().getEnumTypes().get(0);
    }

    private static final WeatherType[] VALUES = values();

    public static WeatherType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WeatherType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:weatherconditions.WeatherType)
  }

  /**
   * Protobuf enum {@code weatherconditions.AirQuality}
   */
  public enum AirQuality
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BAD = 0;</code>
     */
    BAD(0),
    /**
     * <code>AVERAGE = 1;</code>
     */
    AVERAGE(1),
    /**
     * <code>GOOD = 2;</code>
     */
    GOOD(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BAD = 0;</code>
     */
    public static final int BAD_VALUE = 0;
    /**
     * <code>AVERAGE = 1;</code>
     */
    public static final int AVERAGE_VALUE = 1;
    /**
     * <code>GOOD = 2;</code>
     */
    public static final int GOOD_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AirQuality valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AirQuality forNumber(int value) {
      switch (value) {
        case 0: return BAD;
        case 1: return AVERAGE;
        case 2: return GOOD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AirQuality>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AirQuality> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AirQuality>() {
            public AirQuality findValueByNumber(int number) {
              return AirQuality.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return weatherconditions.Weatherconditions.getDescriptor().getEnumTypes().get(1);
    }

    private static final AirQuality[] VALUES = values();

    public static AirQuality valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AirQuality(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:weatherconditions.AirQuality)
  }

  public interface WCReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:weatherconditions.WCReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string city = 1;</code>
     * @return The city.
     */
    java.lang.String getCity();
    /**
     * <code>string city = 1;</code>
     * @return The bytes for city.
     */
    com.google.protobuf.ByteString
        getCityBytes();

    /**
     * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
     * @return A list containing the weatherType.
     */
    java.util.List<weatherconditions.Weatherconditions.WeatherType> getWeatherTypeList();
    /**
     * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
     * @return The count of weatherType.
     */
    int getWeatherTypeCount();
    /**
     * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
     * @param index The index of the element to return.
     * @return The weatherType at the given index.
     */
    weatherconditions.Weatherconditions.WeatherType getWeatherType(int index);
    /**
     * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
     * @return A list containing the enum numeric values on the wire for weatherType.
     */
    java.util.List<java.lang.Integer>
    getWeatherTypeValueList();
    /**
     * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of weatherType at the given index.
     */
    int getWeatherTypeValue(int index);

    /**
     * <code>string temperature = 3;</code>
     * @return The temperature.
     */
    java.lang.String getTemperature();
    /**
     * <code>string temperature = 3;</code>
     * @return The bytes for temperature.
     */
    com.google.protobuf.ByteString
        getTemperatureBytes();

    /**
     * <code>string humidity = 4;</code>
     * @return The humidity.
     */
    java.lang.String getHumidity();
    /**
     * <code>string humidity = 4;</code>
     * @return The bytes for humidity.
     */
    com.google.protobuf.ByteString
        getHumidityBytes();

    /**
     * <code>string pressure = 5;</code>
     * @return The pressure.
     */
    java.lang.String getPressure();
    /**
     * <code>string pressure = 5;</code>
     * @return The bytes for pressure.
     */
    com.google.protobuf.ByteString
        getPressureBytes();

    /**
     * <code>string wind = 6;</code>
     * @return The wind.
     */
    java.lang.String getWind();
    /**
     * <code>string wind = 6;</code>
     * @return The bytes for wind.
     */
    com.google.protobuf.ByteString
        getWindBytes();

    /**
     * <code>.weatherconditions.AirQuality airQuality = 7;</code>
     * @return The enum numeric value on the wire for airQuality.
     */
    int getAirQualityValue();
    /**
     * <code>.weatherconditions.AirQuality airQuality = 7;</code>
     * @return The airQuality.
     */
    weatherconditions.Weatherconditions.AirQuality getAirQuality();
  }
  /**
   * Protobuf type {@code weatherconditions.WCReply}
   */
  public  static final class WCReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:weatherconditions.WCReply)
      WCReplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WCReply.newBuilder() to construct.
    private WCReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WCReply() {
      city_ = "";
      weatherType_ = java.util.Collections.emptyList();
      temperature_ = "";
      humidity_ = "";
      pressure_ = "";
      wind_ = "";
      airQuality_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WCReply();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WCReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              city_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                weatherType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              weatherType_.add(rawValue);
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  weatherType_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                weatherType_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              temperature_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              humidity_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              pressure_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              wind_ = s;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              airQuality_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          weatherType_ = java.util.Collections.unmodifiableList(weatherType_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return weatherconditions.Weatherconditions.internal_static_weatherconditions_WCReply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return weatherconditions.Weatherconditions.internal_static_weatherconditions_WCReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              weatherconditions.Weatherconditions.WCReply.class, weatherconditions.Weatherconditions.WCReply.Builder.class);
    }

    public static final int CITY_FIELD_NUMBER = 1;
    private volatile java.lang.Object city_;
    /**
     * <code>string city = 1;</code>
     * @return The city.
     */
    public java.lang.String getCity() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        city_ = s;
        return s;
      }
    }
    /**
     * <code>string city = 1;</code>
     * @return The bytes for city.
     */
    public com.google.protobuf.ByteString
        getCityBytes() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        city_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WEATHERTYPE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> weatherType_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, weatherconditions.Weatherconditions.WeatherType> weatherType_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, weatherconditions.Weatherconditions.WeatherType>() {
              public weatherconditions.Weatherconditions.WeatherType convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                weatherconditions.Weatherconditions.WeatherType result = weatherconditions.Weatherconditions.WeatherType.valueOf(from);
                return result == null ? weatherconditions.Weatherconditions.WeatherType.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
     * @return A list containing the weatherType.
     */
    public java.util.List<weatherconditions.Weatherconditions.WeatherType> getWeatherTypeList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, weatherconditions.Weatherconditions.WeatherType>(weatherType_, weatherType_converter_);
    }
    /**
     * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
     * @return The count of weatherType.
     */
    public int getWeatherTypeCount() {
      return weatherType_.size();
    }
    /**
     * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
     * @param index The index of the element to return.
     * @return The weatherType at the given index.
     */
    public weatherconditions.Weatherconditions.WeatherType getWeatherType(int index) {
      return weatherType_converter_.convert(weatherType_.get(index));
    }
    /**
     * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
     * @return A list containing the enum numeric values on the wire for weatherType.
     */
    public java.util.List<java.lang.Integer>
    getWeatherTypeValueList() {
      return weatherType_;
    }
    /**
     * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of weatherType at the given index.
     */
    public int getWeatherTypeValue(int index) {
      return weatherType_.get(index);
    }
    private int weatherTypeMemoizedSerializedSize;

    public static final int TEMPERATURE_FIELD_NUMBER = 3;
    private volatile java.lang.Object temperature_;
    /**
     * <code>string temperature = 3;</code>
     * @return The temperature.
     */
    public java.lang.String getTemperature() {
      java.lang.Object ref = temperature_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        temperature_ = s;
        return s;
      }
    }
    /**
     * <code>string temperature = 3;</code>
     * @return The bytes for temperature.
     */
    public com.google.protobuf.ByteString
        getTemperatureBytes() {
      java.lang.Object ref = temperature_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        temperature_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HUMIDITY_FIELD_NUMBER = 4;
    private volatile java.lang.Object humidity_;
    /**
     * <code>string humidity = 4;</code>
     * @return The humidity.
     */
    public java.lang.String getHumidity() {
      java.lang.Object ref = humidity_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        humidity_ = s;
        return s;
      }
    }
    /**
     * <code>string humidity = 4;</code>
     * @return The bytes for humidity.
     */
    public com.google.protobuf.ByteString
        getHumidityBytes() {
      java.lang.Object ref = humidity_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        humidity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRESSURE_FIELD_NUMBER = 5;
    private volatile java.lang.Object pressure_;
    /**
     * <code>string pressure = 5;</code>
     * @return The pressure.
     */
    public java.lang.String getPressure() {
      java.lang.Object ref = pressure_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pressure_ = s;
        return s;
      }
    }
    /**
     * <code>string pressure = 5;</code>
     * @return The bytes for pressure.
     */
    public com.google.protobuf.ByteString
        getPressureBytes() {
      java.lang.Object ref = pressure_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pressure_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WIND_FIELD_NUMBER = 6;
    private volatile java.lang.Object wind_;
    /**
     * <code>string wind = 6;</code>
     * @return The wind.
     */
    public java.lang.String getWind() {
      java.lang.Object ref = wind_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        wind_ = s;
        return s;
      }
    }
    /**
     * <code>string wind = 6;</code>
     * @return The bytes for wind.
     */
    public com.google.protobuf.ByteString
        getWindBytes() {
      java.lang.Object ref = wind_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        wind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AIRQUALITY_FIELD_NUMBER = 7;
    private int airQuality_;
    /**
     * <code>.weatherconditions.AirQuality airQuality = 7;</code>
     * @return The enum numeric value on the wire for airQuality.
     */
    public int getAirQualityValue() {
      return airQuality_;
    }
    /**
     * <code>.weatherconditions.AirQuality airQuality = 7;</code>
     * @return The airQuality.
     */
    public weatherconditions.Weatherconditions.AirQuality getAirQuality() {
      @SuppressWarnings("deprecation")
      weatherconditions.Weatherconditions.AirQuality result = weatherconditions.Weatherconditions.AirQuality.valueOf(airQuality_);
      return result == null ? weatherconditions.Weatherconditions.AirQuality.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getCityBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, city_);
      }
      if (getWeatherTypeList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(weatherTypeMemoizedSerializedSize);
      }
      for (int i = 0; i < weatherType_.size(); i++) {
        output.writeEnumNoTag(weatherType_.get(i));
      }
      if (!getTemperatureBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, temperature_);
      }
      if (!getHumidityBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, humidity_);
      }
      if (!getPressureBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, pressure_);
      }
      if (!getWindBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, wind_);
      }
      if (airQuality_ != weatherconditions.Weatherconditions.AirQuality.BAD.getNumber()) {
        output.writeEnum(7, airQuality_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getCityBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, city_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < weatherType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(weatherType_.get(i));
        }
        size += dataSize;
        if (!getWeatherTypeList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }weatherTypeMemoizedSerializedSize = dataSize;
      }
      if (!getTemperatureBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, temperature_);
      }
      if (!getHumidityBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, humidity_);
      }
      if (!getPressureBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, pressure_);
      }
      if (!getWindBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, wind_);
      }
      if (airQuality_ != weatherconditions.Weatherconditions.AirQuality.BAD.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, airQuality_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof weatherconditions.Weatherconditions.WCReply)) {
        return super.equals(obj);
      }
      weatherconditions.Weatherconditions.WCReply other = (weatherconditions.Weatherconditions.WCReply) obj;

      if (!getCity()
          .equals(other.getCity())) return false;
      if (!weatherType_.equals(other.weatherType_)) return false;
      if (!getTemperature()
          .equals(other.getTemperature())) return false;
      if (!getHumidity()
          .equals(other.getHumidity())) return false;
      if (!getPressure()
          .equals(other.getPressure())) return false;
      if (!getWind()
          .equals(other.getWind())) return false;
      if (airQuality_ != other.airQuality_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CITY_FIELD_NUMBER;
      hash = (53 * hash) + getCity().hashCode();
      if (getWeatherTypeCount() > 0) {
        hash = (37 * hash) + WEATHERTYPE_FIELD_NUMBER;
        hash = (53 * hash) + weatherType_.hashCode();
      }
      hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
      hash = (53 * hash) + getTemperature().hashCode();
      hash = (37 * hash) + HUMIDITY_FIELD_NUMBER;
      hash = (53 * hash) + getHumidity().hashCode();
      hash = (37 * hash) + PRESSURE_FIELD_NUMBER;
      hash = (53 * hash) + getPressure().hashCode();
      hash = (37 * hash) + WIND_FIELD_NUMBER;
      hash = (53 * hash) + getWind().hashCode();
      hash = (37 * hash) + AIRQUALITY_FIELD_NUMBER;
      hash = (53 * hash) + airQuality_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static weatherconditions.Weatherconditions.WCReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static weatherconditions.Weatherconditions.WCReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.WCReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static weatherconditions.Weatherconditions.WCReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.WCReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static weatherconditions.Weatherconditions.WCReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.WCReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static weatherconditions.Weatherconditions.WCReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.WCReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static weatherconditions.Weatherconditions.WCReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.WCReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static weatherconditions.Weatherconditions.WCReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(weatherconditions.Weatherconditions.WCReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code weatherconditions.WCReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:weatherconditions.WCReply)
        weatherconditions.Weatherconditions.WCReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return weatherconditions.Weatherconditions.internal_static_weatherconditions_WCReply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return weatherconditions.Weatherconditions.internal_static_weatherconditions_WCReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                weatherconditions.Weatherconditions.WCReply.class, weatherconditions.Weatherconditions.WCReply.Builder.class);
      }

      // Construct using weatherconditions.Weatherconditions.WCReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        city_ = "";

        weatherType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        temperature_ = "";

        humidity_ = "";

        pressure_ = "";

        wind_ = "";

        airQuality_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return weatherconditions.Weatherconditions.internal_static_weatherconditions_WCReply_descriptor;
      }

      @java.lang.Override
      public weatherconditions.Weatherconditions.WCReply getDefaultInstanceForType() {
        return weatherconditions.Weatherconditions.WCReply.getDefaultInstance();
      }

      @java.lang.Override
      public weatherconditions.Weatherconditions.WCReply build() {
        weatherconditions.Weatherconditions.WCReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public weatherconditions.Weatherconditions.WCReply buildPartial() {
        weatherconditions.Weatherconditions.WCReply result = new weatherconditions.Weatherconditions.WCReply(this);
        int from_bitField0_ = bitField0_;
        result.city_ = city_;
        if (((bitField0_ & 0x00000001) != 0)) {
          weatherType_ = java.util.Collections.unmodifiableList(weatherType_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.weatherType_ = weatherType_;
        result.temperature_ = temperature_;
        result.humidity_ = humidity_;
        result.pressure_ = pressure_;
        result.wind_ = wind_;
        result.airQuality_ = airQuality_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof weatherconditions.Weatherconditions.WCReply) {
          return mergeFrom((weatherconditions.Weatherconditions.WCReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(weatherconditions.Weatherconditions.WCReply other) {
        if (other == weatherconditions.Weatherconditions.WCReply.getDefaultInstance()) return this;
        if (!other.getCity().isEmpty()) {
          city_ = other.city_;
          onChanged();
        }
        if (!other.weatherType_.isEmpty()) {
          if (weatherType_.isEmpty()) {
            weatherType_ = other.weatherType_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureWeatherTypeIsMutable();
            weatherType_.addAll(other.weatherType_);
          }
          onChanged();
        }
        if (!other.getTemperature().isEmpty()) {
          temperature_ = other.temperature_;
          onChanged();
        }
        if (!other.getHumidity().isEmpty()) {
          humidity_ = other.humidity_;
          onChanged();
        }
        if (!other.getPressure().isEmpty()) {
          pressure_ = other.pressure_;
          onChanged();
        }
        if (!other.getWind().isEmpty()) {
          wind_ = other.wind_;
          onChanged();
        }
        if (other.airQuality_ != 0) {
          setAirQualityValue(other.getAirQualityValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        weatherconditions.Weatherconditions.WCReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (weatherconditions.Weatherconditions.WCReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object city_ = "";
      /**
       * <code>string city = 1;</code>
       * @return The city.
       */
      public java.lang.String getCity() {
        java.lang.Object ref = city_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          city_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string city = 1;</code>
       * @return The bytes for city.
       */
      public com.google.protobuf.ByteString
          getCityBytes() {
        java.lang.Object ref = city_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          city_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string city = 1;</code>
       * @param value The city to set.
       * @return This builder for chaining.
       */
      public Builder setCity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        city_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string city = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCity() {
        
        city_ = getDefaultInstance().getCity();
        onChanged();
        return this;
      }
      /**
       * <code>string city = 1;</code>
       * @param value The bytes for city to set.
       * @return This builder for chaining.
       */
      public Builder setCityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        city_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> weatherType_ =
        java.util.Collections.emptyList();
      private void ensureWeatherTypeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          weatherType_ = new java.util.ArrayList<java.lang.Integer>(weatherType_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
       * @return A list containing the weatherType.
       */
      public java.util.List<weatherconditions.Weatherconditions.WeatherType> getWeatherTypeList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, weatherconditions.Weatherconditions.WeatherType>(weatherType_, weatherType_converter_);
      }
      /**
       * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
       * @return The count of weatherType.
       */
      public int getWeatherTypeCount() {
        return weatherType_.size();
      }
      /**
       * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
       * @param index The index of the element to return.
       * @return The weatherType at the given index.
       */
      public weatherconditions.Weatherconditions.WeatherType getWeatherType(int index) {
        return weatherType_converter_.convert(weatherType_.get(index));
      }
      /**
       * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
       * @param index The index to set the value at.
       * @param value The weatherType to set.
       * @return This builder for chaining.
       */
      public Builder setWeatherType(
          int index, weatherconditions.Weatherconditions.WeatherType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWeatherTypeIsMutable();
        weatherType_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
       * @param value The weatherType to add.
       * @return This builder for chaining.
       */
      public Builder addWeatherType(weatherconditions.Weatherconditions.WeatherType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWeatherTypeIsMutable();
        weatherType_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
       * @param values The weatherType to add.
       * @return This builder for chaining.
       */
      public Builder addAllWeatherType(
          java.lang.Iterable<? extends weatherconditions.Weatherconditions.WeatherType> values) {
        ensureWeatherTypeIsMutable();
        for (weatherconditions.Weatherconditions.WeatherType value : values) {
          weatherType_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearWeatherType() {
        weatherType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
       * @return A list containing the enum numeric values on the wire for weatherType.
       */
      public java.util.List<java.lang.Integer>
      getWeatherTypeValueList() {
        return java.util.Collections.unmodifiableList(weatherType_);
      }
      /**
       * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of weatherType at the given index.
       */
      public int getWeatherTypeValue(int index) {
        return weatherType_.get(index);
      }
      /**
       * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of weatherType at the given index.
       * @return This builder for chaining.
       */
      public Builder setWeatherTypeValue(
          int index, int value) {
        ensureWeatherTypeIsMutable();
        weatherType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
       * @param value The enum numeric value on the wire for weatherType to add.
       * @return This builder for chaining.
       */
      public Builder addWeatherTypeValue(int value) {
        ensureWeatherTypeIsMutable();
        weatherType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .weatherconditions.WeatherType weatherType = 2;</code>
       * @param values The enum numeric values on the wire for weatherType to add.
       * @return This builder for chaining.
       */
      public Builder addAllWeatherTypeValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureWeatherTypeIsMutable();
        for (int value : values) {
          weatherType_.add(value);
        }
        onChanged();
        return this;
      }

      private java.lang.Object temperature_ = "";
      /**
       * <code>string temperature = 3;</code>
       * @return The temperature.
       */
      public java.lang.String getTemperature() {
        java.lang.Object ref = temperature_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          temperature_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string temperature = 3;</code>
       * @return The bytes for temperature.
       */
      public com.google.protobuf.ByteString
          getTemperatureBytes() {
        java.lang.Object ref = temperature_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          temperature_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string temperature = 3;</code>
       * @param value The temperature to set.
       * @return This builder for chaining.
       */
      public Builder setTemperature(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        temperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string temperature = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperature() {
        
        temperature_ = getDefaultInstance().getTemperature();
        onChanged();
        return this;
      }
      /**
       * <code>string temperature = 3;</code>
       * @param value The bytes for temperature to set.
       * @return This builder for chaining.
       */
      public Builder setTemperatureBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        temperature_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object humidity_ = "";
      /**
       * <code>string humidity = 4;</code>
       * @return The humidity.
       */
      public java.lang.String getHumidity() {
        java.lang.Object ref = humidity_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          humidity_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string humidity = 4;</code>
       * @return The bytes for humidity.
       */
      public com.google.protobuf.ByteString
          getHumidityBytes() {
        java.lang.Object ref = humidity_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          humidity_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string humidity = 4;</code>
       * @param value The humidity to set.
       * @return This builder for chaining.
       */
      public Builder setHumidity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        humidity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string humidity = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearHumidity() {
        
        humidity_ = getDefaultInstance().getHumidity();
        onChanged();
        return this;
      }
      /**
       * <code>string humidity = 4;</code>
       * @param value The bytes for humidity to set.
       * @return This builder for chaining.
       */
      public Builder setHumidityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        humidity_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object pressure_ = "";
      /**
       * <code>string pressure = 5;</code>
       * @return The pressure.
       */
      public java.lang.String getPressure() {
        java.lang.Object ref = pressure_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pressure_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string pressure = 5;</code>
       * @return The bytes for pressure.
       */
      public com.google.protobuf.ByteString
          getPressureBytes() {
        java.lang.Object ref = pressure_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pressure_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string pressure = 5;</code>
       * @param value The pressure to set.
       * @return This builder for chaining.
       */
      public Builder setPressure(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pressure_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string pressure = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPressure() {
        
        pressure_ = getDefaultInstance().getPressure();
        onChanged();
        return this;
      }
      /**
       * <code>string pressure = 5;</code>
       * @param value The bytes for pressure to set.
       * @return This builder for chaining.
       */
      public Builder setPressureBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pressure_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object wind_ = "";
      /**
       * <code>string wind = 6;</code>
       * @return The wind.
       */
      public java.lang.String getWind() {
        java.lang.Object ref = wind_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          wind_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string wind = 6;</code>
       * @return The bytes for wind.
       */
      public com.google.protobuf.ByteString
          getWindBytes() {
        java.lang.Object ref = wind_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          wind_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string wind = 6;</code>
       * @param value The wind to set.
       * @return This builder for chaining.
       */
      public Builder setWind(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        wind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string wind = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearWind() {
        
        wind_ = getDefaultInstance().getWind();
        onChanged();
        return this;
      }
      /**
       * <code>string wind = 6;</code>
       * @param value The bytes for wind to set.
       * @return This builder for chaining.
       */
      public Builder setWindBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        wind_ = value;
        onChanged();
        return this;
      }

      private int airQuality_ = 0;
      /**
       * <code>.weatherconditions.AirQuality airQuality = 7;</code>
       * @return The enum numeric value on the wire for airQuality.
       */
      public int getAirQualityValue() {
        return airQuality_;
      }
      /**
       * <code>.weatherconditions.AirQuality airQuality = 7;</code>
       * @param value The enum numeric value on the wire for airQuality to set.
       * @return This builder for chaining.
       */
      public Builder setAirQualityValue(int value) {
        airQuality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.weatherconditions.AirQuality airQuality = 7;</code>
       * @return The airQuality.
       */
      public weatherconditions.Weatherconditions.AirQuality getAirQuality() {
        @SuppressWarnings("deprecation")
        weatherconditions.Weatherconditions.AirQuality result = weatherconditions.Weatherconditions.AirQuality.valueOf(airQuality_);
        return result == null ? weatherconditions.Weatherconditions.AirQuality.UNRECOGNIZED : result;
      }
      /**
       * <code>.weatherconditions.AirQuality airQuality = 7;</code>
       * @param value The airQuality to set.
       * @return This builder for chaining.
       */
      public Builder setAirQuality(weatherconditions.Weatherconditions.AirQuality value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        airQuality_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.weatherconditions.AirQuality airQuality = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearAirQuality() {
        
        airQuality_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:weatherconditions.WCReply)
    }

    // @@protoc_insertion_point(class_scope:weatherconditions.WCReply)
    private static final weatherconditions.Weatherconditions.WCReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new weatherconditions.Weatherconditions.WCReply();
    }

    public static weatherconditions.Weatherconditions.WCReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WCReply>
        PARSER = new com.google.protobuf.AbstractParser<WCReply>() {
      @java.lang.Override
      public WCReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WCReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WCReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WCReply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public weatherconditions.Weatherconditions.WCReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WCRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:weatherconditions.WCRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string city = 1;</code>
     * @return The city.
     */
    java.lang.String getCity();
    /**
     * <code>string city = 1;</code>
     * @return The bytes for city.
     */
    com.google.protobuf.ByteString
        getCityBytes();

    /**
     * <code>.weatherconditions.WCReply wCReply = 2;</code>
     * @return Whether the wCReply field is set.
     */
    boolean hasWCReply();
    /**
     * <code>.weatherconditions.WCReply wCReply = 2;</code>
     * @return The wCReply.
     */
    weatherconditions.Weatherconditions.WCReply getWCReply();
    /**
     * <code>.weatherconditions.WCReply wCReply = 2;</code>
     */
    weatherconditions.Weatherconditions.WCReplyOrBuilder getWCReplyOrBuilder();
  }
  /**
   * Protobuf type {@code weatherconditions.WCRequest}
   */
  public  static final class WCRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:weatherconditions.WCRequest)
      WCRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WCRequest.newBuilder() to construct.
    private WCRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WCRequest() {
      city_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WCRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WCRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              city_ = s;
              break;
            }
            case 18: {
              weatherconditions.Weatherconditions.WCReply.Builder subBuilder = null;
              if (wCReply_ != null) {
                subBuilder = wCReply_.toBuilder();
              }
              wCReply_ = input.readMessage(weatherconditions.Weatherconditions.WCReply.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wCReply_);
                wCReply_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return weatherconditions.Weatherconditions.internal_static_weatherconditions_WCRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return weatherconditions.Weatherconditions.internal_static_weatherconditions_WCRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              weatherconditions.Weatherconditions.WCRequest.class, weatherconditions.Weatherconditions.WCRequest.Builder.class);
    }

    public static final int CITY_FIELD_NUMBER = 1;
    private volatile java.lang.Object city_;
    /**
     * <code>string city = 1;</code>
     * @return The city.
     */
    public java.lang.String getCity() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        city_ = s;
        return s;
      }
    }
    /**
     * <code>string city = 1;</code>
     * @return The bytes for city.
     */
    public com.google.protobuf.ByteString
        getCityBytes() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        city_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WCREPLY_FIELD_NUMBER = 2;
    private weatherconditions.Weatherconditions.WCReply wCReply_;
    /**
     * <code>.weatherconditions.WCReply wCReply = 2;</code>
     * @return Whether the wCReply field is set.
     */
    public boolean hasWCReply() {
      return wCReply_ != null;
    }
    /**
     * <code>.weatherconditions.WCReply wCReply = 2;</code>
     * @return The wCReply.
     */
    public weatherconditions.Weatherconditions.WCReply getWCReply() {
      return wCReply_ == null ? weatherconditions.Weatherconditions.WCReply.getDefaultInstance() : wCReply_;
    }
    /**
     * <code>.weatherconditions.WCReply wCReply = 2;</code>
     */
    public weatherconditions.Weatherconditions.WCReplyOrBuilder getWCReplyOrBuilder() {
      return getWCReply();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getCityBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, city_);
      }
      if (wCReply_ != null) {
        output.writeMessage(2, getWCReply());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getCityBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, city_);
      }
      if (wCReply_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getWCReply());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof weatherconditions.Weatherconditions.WCRequest)) {
        return super.equals(obj);
      }
      weatherconditions.Weatherconditions.WCRequest other = (weatherconditions.Weatherconditions.WCRequest) obj;

      if (!getCity()
          .equals(other.getCity())) return false;
      if (hasWCReply() != other.hasWCReply()) return false;
      if (hasWCReply()) {
        if (!getWCReply()
            .equals(other.getWCReply())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CITY_FIELD_NUMBER;
      hash = (53 * hash) + getCity().hashCode();
      if (hasWCReply()) {
        hash = (37 * hash) + WCREPLY_FIELD_NUMBER;
        hash = (53 * hash) + getWCReply().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static weatherconditions.Weatherconditions.WCRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static weatherconditions.Weatherconditions.WCRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.WCRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static weatherconditions.Weatherconditions.WCRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.WCRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static weatherconditions.Weatherconditions.WCRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.WCRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static weatherconditions.Weatherconditions.WCRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.WCRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static weatherconditions.Weatherconditions.WCRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.WCRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static weatherconditions.Weatherconditions.WCRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(weatherconditions.Weatherconditions.WCRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code weatherconditions.WCRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:weatherconditions.WCRequest)
        weatherconditions.Weatherconditions.WCRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return weatherconditions.Weatherconditions.internal_static_weatherconditions_WCRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return weatherconditions.Weatherconditions.internal_static_weatherconditions_WCRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                weatherconditions.Weatherconditions.WCRequest.class, weatherconditions.Weatherconditions.WCRequest.Builder.class);
      }

      // Construct using weatherconditions.Weatherconditions.WCRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        city_ = "";

        if (wCReplyBuilder_ == null) {
          wCReply_ = null;
        } else {
          wCReply_ = null;
          wCReplyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return weatherconditions.Weatherconditions.internal_static_weatherconditions_WCRequest_descriptor;
      }

      @java.lang.Override
      public weatherconditions.Weatherconditions.WCRequest getDefaultInstanceForType() {
        return weatherconditions.Weatherconditions.WCRequest.getDefaultInstance();
      }

      @java.lang.Override
      public weatherconditions.Weatherconditions.WCRequest build() {
        weatherconditions.Weatherconditions.WCRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public weatherconditions.Weatherconditions.WCRequest buildPartial() {
        weatherconditions.Weatherconditions.WCRequest result = new weatherconditions.Weatherconditions.WCRequest(this);
        result.city_ = city_;
        if (wCReplyBuilder_ == null) {
          result.wCReply_ = wCReply_;
        } else {
          result.wCReply_ = wCReplyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof weatherconditions.Weatherconditions.WCRequest) {
          return mergeFrom((weatherconditions.Weatherconditions.WCRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(weatherconditions.Weatherconditions.WCRequest other) {
        if (other == weatherconditions.Weatherconditions.WCRequest.getDefaultInstance()) return this;
        if (!other.getCity().isEmpty()) {
          city_ = other.city_;
          onChanged();
        }
        if (other.hasWCReply()) {
          mergeWCReply(other.getWCReply());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        weatherconditions.Weatherconditions.WCRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (weatherconditions.Weatherconditions.WCRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object city_ = "";
      /**
       * <code>string city = 1;</code>
       * @return The city.
       */
      public java.lang.String getCity() {
        java.lang.Object ref = city_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          city_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string city = 1;</code>
       * @return The bytes for city.
       */
      public com.google.protobuf.ByteString
          getCityBytes() {
        java.lang.Object ref = city_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          city_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string city = 1;</code>
       * @param value The city to set.
       * @return This builder for chaining.
       */
      public Builder setCity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        city_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string city = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCity() {
        
        city_ = getDefaultInstance().getCity();
        onChanged();
        return this;
      }
      /**
       * <code>string city = 1;</code>
       * @param value The bytes for city to set.
       * @return This builder for chaining.
       */
      public Builder setCityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        city_ = value;
        onChanged();
        return this;
      }

      private weatherconditions.Weatherconditions.WCReply wCReply_;
      private com.google.protobuf.SingleFieldBuilderV3<
          weatherconditions.Weatherconditions.WCReply, weatherconditions.Weatherconditions.WCReply.Builder, weatherconditions.Weatherconditions.WCReplyOrBuilder> wCReplyBuilder_;
      /**
       * <code>.weatherconditions.WCReply wCReply = 2;</code>
       * @return Whether the wCReply field is set.
       */
      public boolean hasWCReply() {
        return wCReplyBuilder_ != null || wCReply_ != null;
      }
      /**
       * <code>.weatherconditions.WCReply wCReply = 2;</code>
       * @return The wCReply.
       */
      public weatherconditions.Weatherconditions.WCReply getWCReply() {
        if (wCReplyBuilder_ == null) {
          return wCReply_ == null ? weatherconditions.Weatherconditions.WCReply.getDefaultInstance() : wCReply_;
        } else {
          return wCReplyBuilder_.getMessage();
        }
      }
      /**
       * <code>.weatherconditions.WCReply wCReply = 2;</code>
       */
      public Builder setWCReply(weatherconditions.Weatherconditions.WCReply value) {
        if (wCReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wCReply_ = value;
          onChanged();
        } else {
          wCReplyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.weatherconditions.WCReply wCReply = 2;</code>
       */
      public Builder setWCReply(
          weatherconditions.Weatherconditions.WCReply.Builder builderForValue) {
        if (wCReplyBuilder_ == null) {
          wCReply_ = builderForValue.build();
          onChanged();
        } else {
          wCReplyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.weatherconditions.WCReply wCReply = 2;</code>
       */
      public Builder mergeWCReply(weatherconditions.Weatherconditions.WCReply value) {
        if (wCReplyBuilder_ == null) {
          if (wCReply_ != null) {
            wCReply_ =
              weatherconditions.Weatherconditions.WCReply.newBuilder(wCReply_).mergeFrom(value).buildPartial();
          } else {
            wCReply_ = value;
          }
          onChanged();
        } else {
          wCReplyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.weatherconditions.WCReply wCReply = 2;</code>
       */
      public Builder clearWCReply() {
        if (wCReplyBuilder_ == null) {
          wCReply_ = null;
          onChanged();
        } else {
          wCReply_ = null;
          wCReplyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.weatherconditions.WCReply wCReply = 2;</code>
       */
      public weatherconditions.Weatherconditions.WCReply.Builder getWCReplyBuilder() {
        
        onChanged();
        return getWCReplyFieldBuilder().getBuilder();
      }
      /**
       * <code>.weatherconditions.WCReply wCReply = 2;</code>
       */
      public weatherconditions.Weatherconditions.WCReplyOrBuilder getWCReplyOrBuilder() {
        if (wCReplyBuilder_ != null) {
          return wCReplyBuilder_.getMessageOrBuilder();
        } else {
          return wCReply_ == null ?
              weatherconditions.Weatherconditions.WCReply.getDefaultInstance() : wCReply_;
        }
      }
      /**
       * <code>.weatherconditions.WCReply wCReply = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          weatherconditions.Weatherconditions.WCReply, weatherconditions.Weatherconditions.WCReply.Builder, weatherconditions.Weatherconditions.WCReplyOrBuilder> 
          getWCReplyFieldBuilder() {
        if (wCReplyBuilder_ == null) {
          wCReplyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              weatherconditions.Weatherconditions.WCReply, weatherconditions.Weatherconditions.WCReply.Builder, weatherconditions.Weatherconditions.WCReplyOrBuilder>(
                  getWCReply(),
                  getParentForChildren(),
                  isClean());
          wCReply_ = null;
        }
        return wCReplyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:weatherconditions.WCRequest)
    }

    // @@protoc_insertion_point(class_scope:weatherconditions.WCRequest)
    private static final weatherconditions.Weatherconditions.WCRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new weatherconditions.Weatherconditions.WCRequest();
    }

    public static weatherconditions.Weatherconditions.WCRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WCRequest>
        PARSER = new com.google.protobuf.AbstractParser<WCRequest>() {
      @java.lang.Override
      public WCRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WCRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WCRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WCRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public weatherconditions.Weatherconditions.WCRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FillerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:weatherconditions.Filler)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code weatherconditions.Filler}
   */
  public  static final class Filler extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:weatherconditions.Filler)
      FillerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Filler.newBuilder() to construct.
    private Filler(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Filler() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Filler();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Filler(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return weatherconditions.Weatherconditions.internal_static_weatherconditions_Filler_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return weatherconditions.Weatherconditions.internal_static_weatherconditions_Filler_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              weatherconditions.Weatherconditions.Filler.class, weatherconditions.Weatherconditions.Filler.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof weatherconditions.Weatherconditions.Filler)) {
        return super.equals(obj);
      }
      weatherconditions.Weatherconditions.Filler other = (weatherconditions.Weatherconditions.Filler) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static weatherconditions.Weatherconditions.Filler parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static weatherconditions.Weatherconditions.Filler parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.Filler parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static weatherconditions.Weatherconditions.Filler parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.Filler parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static weatherconditions.Weatherconditions.Filler parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.Filler parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static weatherconditions.Weatherconditions.Filler parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.Filler parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static weatherconditions.Weatherconditions.Filler parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static weatherconditions.Weatherconditions.Filler parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static weatherconditions.Weatherconditions.Filler parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(weatherconditions.Weatherconditions.Filler prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code weatherconditions.Filler}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:weatherconditions.Filler)
        weatherconditions.Weatherconditions.FillerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return weatherconditions.Weatherconditions.internal_static_weatherconditions_Filler_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return weatherconditions.Weatherconditions.internal_static_weatherconditions_Filler_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                weatherconditions.Weatherconditions.Filler.class, weatherconditions.Weatherconditions.Filler.Builder.class);
      }

      // Construct using weatherconditions.Weatherconditions.Filler.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return weatherconditions.Weatherconditions.internal_static_weatherconditions_Filler_descriptor;
      }

      @java.lang.Override
      public weatherconditions.Weatherconditions.Filler getDefaultInstanceForType() {
        return weatherconditions.Weatherconditions.Filler.getDefaultInstance();
      }

      @java.lang.Override
      public weatherconditions.Weatherconditions.Filler build() {
        weatherconditions.Weatherconditions.Filler result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public weatherconditions.Weatherconditions.Filler buildPartial() {
        weatherconditions.Weatherconditions.Filler result = new weatherconditions.Weatherconditions.Filler(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof weatherconditions.Weatherconditions.Filler) {
          return mergeFrom((weatherconditions.Weatherconditions.Filler)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(weatherconditions.Weatherconditions.Filler other) {
        if (other == weatherconditions.Weatherconditions.Filler.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        weatherconditions.Weatherconditions.Filler parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (weatherconditions.Weatherconditions.Filler) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:weatherconditions.Filler)
    }

    // @@protoc_insertion_point(class_scope:weatherconditions.Filler)
    private static final weatherconditions.Weatherconditions.Filler DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new weatherconditions.Weatherconditions.Filler();
    }

    public static weatherconditions.Weatherconditions.Filler getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Filler>
        PARSER = new com.google.protobuf.AbstractParser<Filler>() {
      @java.lang.Override
      public Filler parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Filler(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Filler> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Filler> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public weatherconditions.Weatherconditions.Filler getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_weatherconditions_WCReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_weatherconditions_WCReply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_weatherconditions_WCRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_weatherconditions_WCRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_weatherconditions_Filler_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_weatherconditions_Filler_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027weatherconditions.proto\022\021weathercondit" +
      "ions\"\306\001\n\007WCReply\022\014\n\004city\030\001 \001(\t\0223\n\013weathe" +
      "rType\030\002 \003(\0162\036.weatherconditions.WeatherT" +
      "ype\022\023\n\013temperature\030\003 \001(\t\022\020\n\010humidity\030\004 \001" +
      "(\t\022\020\n\010pressure\030\005 \001(\t\022\014\n\004wind\030\006 \001(\t\0221\n\nai" +
      "rQuality\030\007 \001(\0162\035.weatherconditions.AirQu" +
      "ality\"F\n\tWCRequest\022\014\n\004city\030\001 \001(\t\022+\n\007wCRe" +
      "ply\030\002 \001(\0132\032.weatherconditions.WCReply\"\010\n" +
      "\006Filler*F\n\013WeatherType\022\t\n\005SUNNY\020\000\022\n\n\006CLO" +
      "UDY\020\001\022\t\n\005RAINY\020\002\022\n\n\006STORMY\020\003\022\t\n\005SNOWY\020\004*" +
      ",\n\nAirQuality\022\007\n\003BAD\020\000\022\013\n\007AVERAGE\020\001\022\010\n\004G" +
      "OOD\020\0022\223\001\n\nWCProvider\022>\n\004ping\022\031.weatherco" +
      "nditions.Filler\032\031.weatherconditions.Fill" +
      "er\"\000\022E\n\005getWC\022\034.weatherconditions.WCRequ" +
      "est\032\032.weatherconditions.WCReply\"\0000\001b\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_weatherconditions_WCReply_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_weatherconditions_WCReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_weatherconditions_WCReply_descriptor,
        new java.lang.String[] { "City", "WeatherType", "Temperature", "Humidity", "Pressure", "Wind", "AirQuality", });
    internal_static_weatherconditions_WCRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_weatherconditions_WCRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_weatherconditions_WCRequest_descriptor,
        new java.lang.String[] { "City", "WCReply", });
    internal_static_weatherconditions_Filler_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_weatherconditions_Filler_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_weatherconditions_Filler_descriptor,
        new java.lang.String[] { });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
